{"mappings":"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","sources":["sketch.js"],"sourcesContent":["let capture; //capture object representing webcam\nlet target_hue; //target color\nlet target_color = 255; //rgb of target\nlet targetIndex = 7;\n\n//hsv_colors\nlet redHSV = [0, 60];\nlet yellowHSV = [61, 120];\nlet greenHSV = [121, 180];\nlet cyanHSV = [181, 240];\nlet blueHSV = [241, 300];\nlet magentaHSV = [301, 360];\nlet blackThresh = 20;\nlet whiteThresh = 85;\n\nlet colorDefs = [redHSV, yellowHSV, greenHSV, cyanHSV, blueHSV, magentaHSV ];\nvar colorNames = [\"red\", \"yellow\", \"green\", \"cyan\", \"blue\", \"magenta\", \"black\", \"white\", \"grey\" ];\nlet colorThresh = 15;\nlet brightThresh = 30;\nlet satThresh = 30;\n\n//let colorDefs = [redHSV, yellowHSV, greenHSV, cyanHSV, blueHSV, magentaHSV ];\n//let colorNames = [\"White\", \"Silver\", \"Gray\", \"Black\", \"Red\", \"Maroon\", \"Yellow\", \"Olive\", \"Lime\", \"Green\", \"Aqua\", \"t ];\nlet colorCounts;\n\nlet usingNamedColor = false;\nlet targetCount = 0;\n\n// let osc = new OSC(); // Create a new OSC object\n// osc.open();\n\n\nfunction setup() {\n  createCanvas(500, 500);\n\n  // Create the video capture and hide the element.\n  capture = createCapture(VIDEO);\n  capture.hide();\n\n  describe('Color detection.');\n  pixelDensity(1);\n\n}\n\nfunction draw() {\n  // Draw the video capture within the canvas.\n  image(capture, 0, 0, width, width * capture.height / capture.width);\n  filter(BLUR, 3, true);\n  detect();\n  fill(target_color);\n  rect( 25, 25, 25, 25 );\n}\n\nfunction sendColorOSCInfo()\n{\n  let percentTarget = targetCount / (width * height);\n  let url = `http://localhost:3001/colorDetect?targetPercent=${percentTarget}`;\n  for(let i=0; i<colorCounts.length; i++)\n  {\n    url += `&${colorNames[i]}=${colorCounts[i]/(width * height)}`;\n  }\n  fetch(url);\n  console.log(url);\n}\n\nfunction detect()\n{\n  loadPixels();\n  colorCounts = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  targetCount =0;\n\n\n  for ( let i=0; i<width; i++ )\n\n  {\n    for ( let j=0; j<height; j++ )\n    {\n      let loc = (i + width * j) * 4;\n      let curColor = color( pixels[loc], pixels[loc+1], pixels[loc+2], pixels[loc+3]);\n      let cur = hue(curColor);\n      let bright = brightness(curColor);\n      let satur = saturation(curColor);\n\n      let which = classifyColor(cur, bright, satur);\n      colorCounts[which]++;\n      \n      if( (which == targetIndex && usingNamedColor) || \n      (( cur < hue(target_color)+colorThresh && cur > hue(target_color)-colorThresh    ) &&\n       ( bright < brightness(target_color)+brightThresh && bright > brightness(target_color)-brightThresh    ) &&\n       ( satur < saturation(target_color)+satThresh && satur > saturation(target_color)-satThresh    )\n      ))\n      {\n        //255, 105, 180 - hot pink\n        pixels[loc] = 255; \n        pixels[loc + 1] = 105;\n        pixels[loc + 2] = 180;\n        targetCount++;\n      }\n    }\n  }\n  updatePixels();\n  sendColorOSCInfo(); \n}\n\nfunction classifyColor(cur, bright, sat)\n{\n  let which = -1;\n  let index = 0;\n\n  if ( bright < blackThresh && sat < 30 )\n  {\n    which = 6;\n  } \n  else if ( bright > whiteThresh )\n  {\n    which = 7;\n  } \n  else if( sat < 20 )\n  {\n    which = 8; \n  }\n  else\n  {\n    while ( which == -1 )\n    {\n      if ( cur <= colorDefs[index][1] )\n      {\n        which = index;\n      }\n      index++;\n    }\n  }\n  return which;\n}\n\nfunction printColorInfo(colorCounts)\n{\n  let colorIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n  colorIndices.sort(function(a, b) {\n    return colorCounts[b]-colorCounts[a]\n  });\n\n  print( \"========= Color Info =============\" );\n  for (let i =0; i<colorCounts.length; i++)\n  {\n    let index = colorIndices[i];\n    print(colorNames[index] + \": \" + colorCounts[index] + \" percent of image:\" + (colorCounts[index] / (width * height)));\n  }\n  print(\"TARGET COLOR (more specific): Number of pixels with target color: \" + targetCount+ \" percent of image:\" + (targetCount / (width * height)));\n  print( \"=================\" );\n}\n\nfunction mouseClicked()\n{\n  loadPixels();\n  let index = (mouseX + width * mouseY) * 4;\n  target_color = color( pixels[index], pixels[index+1], pixels[index+2], pixels[index+3] );\n  target_hue = hue(target_color);\n  let satur = saturation(target_color);\n\n  \n  print( \"Target color is: \" + red(target_color) + \",\" + green(target_color) + \",\" + blue(target_color) );\n  print( \"Target hue is: \" + target_hue );\n  print (\"Target brightness is: \" + brightness(target_color));\n  print (\"Target saturation is: \" + satur);\n\n  targetIndex = classifyColor(target_hue, brightness(target_color), satur);\n  print(\"Named color:\" + colorNames[targetIndex] + \", \" +targetIndex);\n}\n\nfunction keyPressed()\n{\n  if(key == ' ')\n  {\n    printColorInfo(colorCounts);\n  }\n  else if(key == 'q')\n  {\n    colorThresh++; \n    print(\"Color thresh is:\" + colorThresh);\n  }\n  else if(key == 'a')\n  {\n    colorThresh--; \n    print(\"Color thresh is:\" + colorThresh);\n\n  }\n  \n}\n"],"names":[],"version":3,"file":"index.ba7f5425.js.map","sourceRoot":"/__parcel_source_root/"}